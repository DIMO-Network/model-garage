package {{ .PackageName }}

import (
	"context"
	"database/sql"

	"github.com/pressly/goose/v3"
)

func init() {
	_, filename, _, _ := runtime.Caller(0)
	registerFunc := func() { goose.AddNamedMigrationContext(filename, upCommand{{ version }}, downCommand{{ version }}) }
	registerFuncs = append(registerFuncs, registerFunc)
	registerFunc()
}

func upCommand{{ version }}(ctx context.Context, tx *sql.Tx) error {
	// This code is executed when the migration is applied.
	upStatements  := []string{ 
	}
	for _, upStatement := range upStatements {
		_, err := tx.ExecContext(ctx, upStatement)
		if err != nil {
			return err
		}
	}
	return nil
}

func downCommand{{ version }}(ctx context.Context, tx *sql.Tx) error {
	// This code is executed when the migration is rolled back.
	downStatements  :=[]string{ 
	}
	for _, downStatement := range downStatements {
		_, err := tx.ExecContext(ctx, downStatement)
		if err != nil {
			return err
		}
	}
	return nil
}