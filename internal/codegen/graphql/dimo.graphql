"""
A point in time, encoded per RFC-3999. Typically these will be in second precision,
just like the blockchain, and in UTC.
"""
scalar Time

"""
This directive on an input object indicates that a client must specify one of the
fields of the object and no others. Typically used for lookups.
"""
directive @oneOf on INPUT_OBJECT

"""
The root query type for the GraphQL schema.
"""
type Query {
  """
  View a particular node.
  """
  node(
    """
    The ID of the node.
    """
    id: ID!
  ): Node

  dimo(dimoID: ID!, timeStamp: Time!): Dimo

  dimos(
    """
    The number of dimos to retrieve.
    Mutually exclusive with `last`.
    """
    first: Int
    """
    A cursor for pagination. Retrieve dimos after this cursor.
    """
    after: String
    """
    The number of dimos to retrieve from the end of the list.
    Mutually exclusive with `first`.
    """
    last: Int
    """
    A cursor for pagination. Retrieve dimos before this cursor.
    """
    before: String
    """
    Filter the dimos based on specific criteria.
    """
    filterBy: DimosFilter
  ): DimoConnection
}

"""
The DimosFilter input is used to specify filtering criteria for querying dimos.
Dimos must match all of the specified criteria.
"""
input DimosFilter {
  tokenID: ID!
  since: Time!
  until: Time!
}

# Shared Types
interface Node {
  id: ID!
}

type Dimo implements Node {
  id: ID!
  tokenID: ID!
  timeStamp: Time!
  value: String!
}

type DimoConnection {
  totalCount: Int!
  edges: [DimoEdge!]!
  pageInfo: PageInfo!
}

type PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}
