// Package vss provides a models and conversion functions for the vss vehicles.
package vss

import (
	"time"

	"github.com/DIMO-Network/model-garage/internal/convert"
)

// This file is automatically populated with conversion functions for each field of a model struct.
// any conversion functions already defined in this package will not be generated.
// Code generated by model-garage.

// ToChassisAxleRow1WheelLeftTirePressure converts data as float64 to uint16.
func ToChassisAxleRow1WheelLeftTirePressure(val float64) (uint16, error) {
	return convert.Float64toUint16(val), nil
}

// ToChassisAxleRow1WheelRightTirePressure converts data as float64 to uint16.
func ToChassisAxleRow1WheelRightTirePressure(val float64) (uint16, error) {
	return convert.Float64toUint16(val), nil
}

// ToChassisAxleRow2WheelLeftTirePressure converts data as float64 to uint16.
func ToChassisAxleRow2WheelLeftTirePressure(val float64) (uint16, error) {
	return convert.Float64toUint16(val), nil
}

// ToChassisAxleRow2WheelRightTirePressure converts data as float64 to uint16.
func ToChassisAxleRow2WheelRightTirePressure(val float64) (uint16, error) {
	return convert.Float64toUint16(val), nil
}

// ToCurrentLocationAltitude converts data as float64 to float64.
func ToCurrentLocationAltitude(val float64) (float64, error) {
	return val, nil
}

// ToCurrentLocationLatitude converts data as float64 to float64.
func ToCurrentLocationLatitude(val float64) (float64, error) {
	return val, nil
}

// ToCurrentLocationLongitude converts data as float64 to float64.
func ToCurrentLocationLongitude(val float64) (float64, error) {
	return val, nil
}

// ToCurrentLocationTimestamp converts data as string to time.Time.
func ToCurrentLocationTimestamp(val string) (time.Time, error) {
	return time.Parse(time.RFC3339, val)
}

// ToDIMODefinitionID converts data as string to string.
func ToDIMODefinitionID(val string) (string, error) {
	return val, nil
}

// ToDIMOSource converts data as string to string.
func ToDIMOSource(val string) (string, error) {
	return val, nil
}

// ToDIMOSubject converts data as string to string.
func ToDIMOSubject(val string) (string, error) {
	return val, nil
}

// ToDIMOTimestamp converts data as string to time.Time.
func ToDIMOTimestamp(val string) (time.Time, error) {
	return time.Parse(time.RFC3339, val)
}

// ToDIMOType converts data as string to string.
func ToDIMOType(val string) (string, error) {
	return val, nil
}

// ToDIMOVehicleID converts data as string to string.
func ToDIMOVehicleID(val string) (string, error) {
	return val, nil
}

// ToExteriorAirTemperature converts data as float64 to float32.
func ToExteriorAirTemperature(val float64) (float32, error) {
	return convert.Float64ToFloat32(val), nil
}

// ToLowVoltageBatteryCurrentVoltage converts data as float64 to float32.
func ToLowVoltageBatteryCurrentVoltage(val float64) (float32, error) {
	return convert.Float64ToFloat32(val), nil
}

// ToOBDBarometricPressure converts data as float64 to float32.
func ToOBDBarometricPressure(val float64) (float32, error) {
	return convert.Float64ToFloat32(val), nil
}

// ToOBDEngineLoad converts data as float64 to float32.
func ToOBDEngineLoad(val float64) (float32, error) {
	return convert.Float64ToFloat32(val), nil
}

// ToOBDIntakeTemp converts data as float64 to float32.
func ToOBDIntakeTemp(val float64) (float32, error) {
	return convert.Float64ToFloat32(val), nil
}

// ToOBDRunTime converts data as float64 to float32.
func ToOBDRunTime(val float64) (float32, error) {
	return convert.Float64ToFloat32(val), nil
}

// ToPowertrainCombustionEngineECT converts data as float64 to int16.
func ToPowertrainCombustionEngineECT(val float64) (int16, error) {
	return convert.Float64toInt16(val), nil
}

// ToPowertrainCombustionEngineEngineOilLevel converts data as float64 to string.
func ToPowertrainCombustionEngineEngineOilLevel(oilLevel float64) (string, error) {
	switch {
	case oilLevel < 0.25:
		return "CRITICALLY_LOW", nil
	case oilLevel < 0.5:
		return "LOW", nil
	case oilLevel < 0.75:
		return "NORMAL", nil
	case oilLevel < .99:
		return "HIGH", nil
	default:
		return "CRITICALLY_HIGH", nil
	}
}

// ToPowertrainCombustionEngineSpeed converts data as float64 to uint16.
func ToPowertrainCombustionEngineSpeed(val float64) (uint16, error) {
	return convert.Float64toUint16(val), nil
}

// ToPowertrainCombustionEngineTPS converts data as float64 to uint8.
func ToPowertrainCombustionEngineTPS(val float64) (uint8, error) {
	return convert.Float64toUint8(val), nil
}

// ToPowertrainFuelSystemAbsoluteLevel converts data as float64 to float32.
func ToPowertrainFuelSystemAbsoluteLevel(val float64) (float32, error) {
	return convert.Float64ToFloat32(val), nil
}

// ToPowertrainFuelSystemSupportedFuelTypes converts data as string to []string.
func ToPowertrainFuelSystemSupportedFuelTypes(val string) ([]string, error) {
	switch val {
	case "Gasoline":
		return []string{"GASOLINE"}, nil
	case "Ethanol":
		return []string{"E85"}, nil
	case "Diesel":
		return []string{"DIESEL"}, nil
	case "LPG":
		return []string{"LPG"}, nil
	default:
		return []string{"OTHER"}, nil
	}
}

// ToPowertrainRange converts data as float64 to uint32.
func ToPowertrainRange(val float64) (uint32, error) {
	return convert.Float64toUint32(val), nil
}

// ToPowertrainTractionBatteryChargingChargeLimit converts data as float64 to uint8.
func ToPowertrainTractionBatteryChargingChargeLimit(val float64) (uint8, error) {
	return convert.Float64toUint8(val), nil
}

// ToPowertrainTractionBatteryChargingIsCharging converts data as bool to bool.
func ToPowertrainTractionBatteryChargingIsCharging(val bool) (bool, error) {
	return val, nil
}

// ToPowertrainTractionBatteryGrossCapacity converts data as float64 to uint16.
func ToPowertrainTractionBatteryGrossCapacity(val float64) (uint16, error) {
	return convert.Float64toUint16(val), nil
}

// ToPowertrainTractionBatteryStateOfChargeCurrent converts data as float64 to float32.
func ToPowertrainTractionBatteryStateOfChargeCurrent(val float64) (float32, error) {
	return convert.Float64ToFloat32(val), nil
}

// ToPowertrainTransmissionTravelledDistance converts data as float64 to float32.
func ToPowertrainTransmissionTravelledDistance(val float64) (float32, error) {
	return convert.Float64ToFloat32(val), nil
}

// ToSpeed converts data as float64 to float32.
func ToSpeed(val float64) (float32, error) {
	return convert.Float64ToFloat32(val), nil
}

// ToVehicleIdentificationBrand converts data as string to string.
func ToVehicleIdentificationBrand(val string) (string, error) {
	return val, nil
}

// ToVehicleIdentificationModel converts data as string to string.
func ToVehicleIdentificationModel(val string) (string, error) {
	return val, nil
}

// ToVehicleIdentificationYear converts data as float64 to uint16.
func ToVehicleIdentificationYear(val float64) (uint16, error) {
	return convert.Float64toUint16(val), nil
}

// ToVehicleIdentificationVIN converts data as string to string.
func ToVehicleIdentificationVIN(val string) (string, error) {
	return val, nil
}

// ToPowertrainType converts data as string to string.
func ToPowertrainType(val string) (string, error) {
	// possible arguments Gasoline, Ethanol, Diesel, Not available, Electric, LPG
	// deault to combustion
	if val == "Electric" {
		return "ELECTRIC", nil
	}
	return "COMBUSTION", nil
}
