// Code generated by "model-garage" DO NOT EDIT.
package vss

import "time"

const (
	// FieldChassisAxleRow1WheelLeftTirePressure Tire pressure in kilo-Pascal.
	FieldChassisAxleRow1WheelLeftTirePressure = "Chassis_Axle_Row1_Wheel_Left_Tire_Pressure"
	// FieldChassisAxleRow1WheelRightTirePressure Tire pressure in kilo-Pascal.
	FieldChassisAxleRow1WheelRightTirePressure = "Chassis_Axle_Row1_Wheel_Right_Tire_Pressure"
	// FieldChassisAxleRow2WheelLeftTirePressure Tire pressure in kilo-Pascal.
	FieldChassisAxleRow2WheelLeftTirePressure = "Chassis_Axle_Row2_Wheel_Left_Tire_Pressure"
	// FieldChassisAxleRow2WheelRightTirePressure Tire pressure in kilo-Pascal.
	FieldChassisAxleRow2WheelRightTirePressure = "Chassis_Axle_Row2_Wheel_Right_Tire_Pressure"
	// FieldCurrentLocationAltitude Current altitude relative to WGS 84 reference ellipsoid, as measured at the position of GNSS receiver antenna.
	FieldCurrentLocationAltitude = "CurrentLocation_Altitude"
	// FieldCurrentLocationLatitude Current latitude of vehicle in WGS 84 geodetic coordinates, as measured at the position of GNSS receiver antenna.
	FieldCurrentLocationLatitude = "CurrentLocation_Latitude"
	// FieldCurrentLocationLongitude Current longitude of vehicle in WGS 84 geodetic coordinates, as measured at the position of GNSS receiver antenna.
	FieldCurrentLocationLongitude = "CurrentLocation_Longitude"
	// FieldCurrentLocationTimestamp Timestamp from GNSS system for current location, formatted according to ISO 8601 with UTC time zone.
	FieldCurrentLocationTimestamp = "CurrentLocation_Timestamp"
	// FieldDIMODefinitionID ID for the vehicles definition
	FieldDIMODefinitionID = "DIMO_DefinitionID"
	// FieldDIMOSource where the data was sourced from
	FieldDIMOSource = "DIMO_Source"
	// FieldDIMOSubject subjet of this vehicle data
	FieldDIMOSubject = "DIMO_Subject"
	// FieldDIMOTimestamp timestamp of when this data was colllected
	FieldDIMOTimestamp = "DIMO_Timestamp"
	// FieldDIMOType type of data collected
	FieldDIMOType = "DIMO_Type"
	// FieldDIMOVehicleID unque DIMO ID for the vehicle
	FieldDIMOVehicleID = "DIMO_VehicleID"
	// FieldExteriorAirTemperature Air temperature outside the vehicle.
	FieldExteriorAirTemperature = "Exterior_AirTemperature"
	// FieldLowVoltageBatteryCurrentVoltage Current Voltage of the low voltage battery.
	FieldLowVoltageBatteryCurrentVoltage = "LowVoltageBattery_CurrentVoltage"
	// FieldOBDBarometricPressure PID 33 - Barometric pressure
	FieldOBDBarometricPressure = "OBD_BarometricPressure"
	// FieldOBDEngineLoad PID 04 - Engine load in percent - 0 = no load, 100 = full load
	FieldOBDEngineLoad = "OBD_EngineLoad"
	// FieldOBDIntakeTemp PID 0F - Intake temperature
	FieldOBDIntakeTemp = "OBD_IntakeTemp"
	// FieldOBDRunTime PID 1F - Engine run time
	FieldOBDRunTime = "OBD_RunTime"
	// FieldPowertrainCombustionEngineECT Engine coolant temperature.
	FieldPowertrainCombustionEngineECT = "Powertrain_CombustionEngine_ECT"
	// FieldPowertrainCombustionEngineEngineOilLevel Engine oil level.
	FieldPowertrainCombustionEngineEngineOilLevel = "Powertrain_CombustionEngine_EngineOilLevel"
	// FieldPowertrainCombustionEngineSpeed Engine speed measured as rotations per minute.
	FieldPowertrainCombustionEngineSpeed = "Powertrain_CombustionEngine_Speed"
	// FieldPowertrainCombustionEngineTPS Current throttle position.
	FieldPowertrainCombustionEngineTPS = "Powertrain_CombustionEngine_TPS"
	// FieldPowertrainFuelSystemAbsoluteLevel Current available fuel in the fuel tank expressed in liters.
	FieldPowertrainFuelSystemAbsoluteLevel = "Powertrain_FuelSystem_AbsoluteLevel"
	// FieldPowertrainFuelSystemSupportedFuelTypes High level information of fuel types supported
	FieldPowertrainFuelSystemSupportedFuelTypes = "Powertrain_FuelSystem_SupportedFuelTypes"
	// FieldPowertrainRange Remaining range in meters using all energy sources available in the vehicle.
	FieldPowertrainRange = "Powertrain_Range"
	// FieldPowertrainTractionBatteryChargingChargeLimit Target charge limit (state of charge) for battery.
	FieldPowertrainTractionBatteryChargingChargeLimit = "Powertrain_TractionBattery_Charging_ChargeLimit"
	// FieldPowertrainTractionBatteryChargingIsCharging True if charging is ongoing. Charging is considered to be ongoing if energy is flowing from charger to vehicle.
	FieldPowertrainTractionBatteryChargingIsCharging = "Powertrain_TractionBattery_Charging_IsCharging"
	// FieldPowertrainTractionBatteryGrossCapacity Gross capacity of the battery.
	FieldPowertrainTractionBatteryGrossCapacity = "Powertrain_TractionBattery_GrossCapacity"
	// FieldPowertrainTractionBatteryStateOfChargeCurrent Physical state of charge of the high voltage battery, relative to net capacity. This is not necessarily the state of charge being displayed to the customer.
	FieldPowertrainTractionBatteryStateOfChargeCurrent = "Powertrain_TractionBattery_StateOfCharge_Current"
	// FieldPowertrainTransmissionTravelledDistance Odometer reading, total distance travelled during the lifetime of the transmission.
	FieldPowertrainTransmissionTravelledDistance = "Powertrain_Transmission_TravelledDistance"
	// FieldPowertrainType Defines the powertrain type of the vehicle.
	FieldPowertrainType = "Powertrain_Type"
	// FieldSpeed Vehicle speed.
	FieldSpeed = "Speed"
	// FieldVehicleIdentificationBrand Vehicle brand or manufacturer.
	FieldVehicleIdentificationBrand = "VehicleIdentification_Brand"
	// FieldVehicleIdentificationModel Vehicle model.
	FieldVehicleIdentificationModel = "VehicleIdentification_Model"
	// FieldVehicleIdentificationVIN 17-character Vehicle Identification Number (VIN) as defined by ISO 3779.
	FieldVehicleIdentificationVIN = "VehicleIdentification_VIN"
	// FieldVehicleIdentificationYear Model year of the vehicle.
	FieldVehicleIdentificationYear = "VehicleIdentification_Year"
)

type Vehicle struct {
	// ChassisAxleRow1WheelLeftTirePressure Tire pressure in kilo-Pascal.
	ChassisAxleRow1WheelLeftTirePressure uint16 `ch:"Chassis_Axle_Row1_Wheel_Left_Tire_Pressure" json:"Chassis_Axle_Row1_Wheel_Left_Tire_Pressure,omitempty"`
	// ChassisAxleRow1WheelRightTirePressure Tire pressure in kilo-Pascal.
	ChassisAxleRow1WheelRightTirePressure uint16 `ch:"Chassis_Axle_Row1_Wheel_Right_Tire_Pressure" json:"Chassis_Axle_Row1_Wheel_Right_Tire_Pressure,omitempty"`
	// ChassisAxleRow2WheelLeftTirePressure Tire pressure in kilo-Pascal.
	ChassisAxleRow2WheelLeftTirePressure uint16 `ch:"Chassis_Axle_Row2_Wheel_Left_Tire_Pressure" json:"Chassis_Axle_Row2_Wheel_Left_Tire_Pressure,omitempty"`
	// ChassisAxleRow2WheelRightTirePressure Tire pressure in kilo-Pascal.
	ChassisAxleRow2WheelRightTirePressure uint16 `ch:"Chassis_Axle_Row2_Wheel_Right_Tire_Pressure" json:"Chassis_Axle_Row2_Wheel_Right_Tire_Pressure,omitempty"`
	// CurrentLocationAltitude Current altitude relative to WGS 84 reference ellipsoid, as measured at the position of GNSS receiver antenna.
	CurrentLocationAltitude float64 `ch:"CurrentLocation_Altitude" json:"CurrentLocation_Altitude,omitempty"`
	// CurrentLocationLatitude Current latitude of vehicle in WGS 84 geodetic coordinates, as measured at the position of GNSS receiver antenna.
	CurrentLocationLatitude float64 `ch:"CurrentLocation_Latitude" json:"CurrentLocation_Latitude,omitempty"`
	// CurrentLocationLongitude Current longitude of vehicle in WGS 84 geodetic coordinates, as measured at the position of GNSS receiver antenna.
	CurrentLocationLongitude float64 `ch:"CurrentLocation_Longitude" json:"CurrentLocation_Longitude,omitempty"`
	// CurrentLocationTimestamp Timestamp from GNSS system for current location, formatted according to ISO 8601 with UTC time zone.
	CurrentLocationTimestamp time.Time `ch:"CurrentLocation_Timestamp" json:"CurrentLocation_Timestamp,omitempty"`
	// DIMODefinitionID ID for the vehicles definition
	DIMODefinitionID string `ch:"DIMO_DefinitionID" json:"DIMO_DefinitionID,omitempty"`
	// DIMOSource where the data was sourced from
	DIMOSource string `ch:"DIMO_Source" json:"DIMO_Source,omitempty"`
	// DIMOSubject subjet of this vehicle data
	DIMOSubject string `ch:"DIMO_Subject" json:"DIMO_Subject,omitempty"`
	// DIMOTimestamp timestamp of when this data was colllected
	DIMOTimestamp time.Time `ch:"DIMO_Timestamp" json:"DIMO_Timestamp,omitempty"`
	// DIMOType type of data collected
	DIMOType string `ch:"DIMO_Type" json:"DIMO_Type,omitempty"`
	// DIMOVehicleID unque DIMO ID for the vehicle
	DIMOVehicleID string `ch:"DIMO_VehicleID" json:"DIMO_VehicleID,omitempty"`
	// ExteriorAirTemperature Air temperature outside the vehicle.
	ExteriorAirTemperature float32 `ch:"Exterior_AirTemperature" json:"Exterior_AirTemperature,omitempty"`
	// LowVoltageBatteryCurrentVoltage Current Voltage of the low voltage battery.
	LowVoltageBatteryCurrentVoltage float32 `ch:"LowVoltageBattery_CurrentVoltage" json:"LowVoltageBattery_CurrentVoltage,omitempty"`
	// OBDBarometricPressure PID 33 - Barometric pressure
	OBDBarometricPressure float32 `ch:"OBD_BarometricPressure" json:"OBD_BarometricPressure,omitempty"`
	// OBDEngineLoad PID 04 - Engine load in percent - 0 = no load, 100 = full load
	OBDEngineLoad float32 `ch:"OBD_EngineLoad" json:"OBD_EngineLoad,omitempty"`
	// OBDIntakeTemp PID 0F - Intake temperature
	OBDIntakeTemp float32 `ch:"OBD_IntakeTemp" json:"OBD_IntakeTemp,omitempty"`
	// OBDRunTime PID 1F - Engine run time
	OBDRunTime float32 `ch:"OBD_RunTime" json:"OBD_RunTime,omitempty"`
	// PowertrainCombustionEngineECT Engine coolant temperature.
	PowertrainCombustionEngineECT int16 `ch:"Powertrain_CombustionEngine_ECT" json:"Powertrain_CombustionEngine_ECT,omitempty"`
	// PowertrainCombustionEngineEngineOilLevel Engine oil level.
	PowertrainCombustionEngineEngineOilLevel string `ch:"Powertrain_CombustionEngine_EngineOilLevel" json:"Powertrain_CombustionEngine_EngineOilLevel,omitempty"`
	// PowertrainCombustionEngineSpeed Engine speed measured as rotations per minute.
	PowertrainCombustionEngineSpeed uint16 `ch:"Powertrain_CombustionEngine_Speed" json:"Powertrain_CombustionEngine_Speed,omitempty"`
	// PowertrainCombustionEngineTPS Current throttle position.
	PowertrainCombustionEngineTPS uint8 `ch:"Powertrain_CombustionEngine_TPS" json:"Powertrain_CombustionEngine_TPS,omitempty"`
	// PowertrainFuelSystemAbsoluteLevel Current available fuel in the fuel tank expressed in liters.
	PowertrainFuelSystemAbsoluteLevel float32 `ch:"Powertrain_FuelSystem_AbsoluteLevel" json:"Powertrain_FuelSystem_AbsoluteLevel,omitempty"`
	// PowertrainFuelSystemSupportedFuelTypes High level information of fuel types supported
	PowertrainFuelSystemSupportedFuelTypes []string `ch:"Powertrain_FuelSystem_SupportedFuelTypes" json:"Powertrain_FuelSystem_SupportedFuelTypes,omitempty"`
	// PowertrainRange Remaining range in meters using all energy sources available in the vehicle.
	PowertrainRange uint32 `ch:"Powertrain_Range" json:"Powertrain_Range,omitempty"`
	// PowertrainTractionBatteryChargingChargeLimit Target charge limit (state of charge) for battery.
	PowertrainTractionBatteryChargingChargeLimit uint8 `ch:"Powertrain_TractionBattery_Charging_ChargeLimit" json:"Powertrain_TractionBattery_Charging_ChargeLimit,omitempty"`
	// PowertrainTractionBatteryChargingIsCharging True if charging is ongoing. Charging is considered to be ongoing if energy is flowing from charger to vehicle.
	PowertrainTractionBatteryChargingIsCharging bool `ch:"Powertrain_TractionBattery_Charging_IsCharging" json:"Powertrain_TractionBattery_Charging_IsCharging,omitempty"`
	// PowertrainTractionBatteryGrossCapacity Gross capacity of the battery.
	PowertrainTractionBatteryGrossCapacity uint16 `ch:"Powertrain_TractionBattery_GrossCapacity" json:"Powertrain_TractionBattery_GrossCapacity,omitempty"`
	// PowertrainTractionBatteryStateOfChargeCurrent Physical state of charge of the high voltage battery, relative to net capacity. This is not necessarily the state of charge being displayed to the customer.
	PowertrainTractionBatteryStateOfChargeCurrent float32 `ch:"Powertrain_TractionBattery_StateOfCharge_Current" json:"Powertrain_TractionBattery_StateOfCharge_Current,omitempty"`
	// PowertrainTransmissionTravelledDistance Odometer reading, total distance travelled during the lifetime of the transmission.
	PowertrainTransmissionTravelledDistance float32 `ch:"Powertrain_Transmission_TravelledDistance" json:"Powertrain_Transmission_TravelledDistance,omitempty"`
	// PowertrainType Defines the powertrain type of the vehicle.
	PowertrainType string `ch:"Powertrain_Type" json:"Powertrain_Type,omitempty"`
	// Speed Vehicle speed.
	Speed float32 `ch:"Speed" json:"Speed,omitempty"`
	// VehicleIdentificationBrand Vehicle brand or manufacturer.
	VehicleIdentificationBrand string `ch:"VehicleIdentification_Brand" json:"VehicleIdentification_Brand,omitempty"`
	// VehicleIdentificationModel Vehicle model.
	VehicleIdentificationModel string `ch:"VehicleIdentification_Model" json:"VehicleIdentification_Model,omitempty"`
	// VehicleIdentificationVIN 17-character Vehicle Identification Number (VIN) as defined by ISO 3779.
	VehicleIdentificationVIN string `ch:"VehicleIdentification_VIN" json:"VehicleIdentification_VIN,omitempty"`
	// VehicleIdentificationYear Model year of the vehicle.
	VehicleIdentificationYear uint16 `ch:"VehicleIdentification_Year" json:"VehicleIdentification_Year,omitempty"`
}
